#set( $form = $item )
#set( $entity = $form.entity )
#set( $entityName = $generator.formatName($entity.name, "entity_class") )
package $package;

import sk.tuke.magsa.framework.Utilities;
import sk.tuke.magsa.framework.ValidatorException;
import sk.tuke.magsa.framework.ui.FormDialog;
import ${generator.formatQualifiedName($form.getEntityName() , "entity_class")};

public class $name extends FormDialog<$form.getEntityName()>{

#set( $constraintsDir = "/sk/tuke/magsa/tools/generator/templates/constraint/" )

    public $name() {
        super(new $form.getEntityName()());
    }

    public $name($form.getEntityName() entity) {
        super(entity);
    }

    public $form.getEntityName() show() {
        String input;
#foreach($field in $form.getFields())

#set($type = ${generator.toUCIdent($field.getProperty().getTypeToString())})
#set($propName = $field.getPropertyName())

$type $propName = entity.get${generator.toUCIdent($propName)}();

do {
        try {
            System.out.print(String.format("Enter nazov [%s]: ", entity.get${generator.toUCIdent($propName)}()));
            input = Utilities.readLine();
            if(!"".equals(input)) {
#if($type == "Integer")
$propName = Integer.valueOf(input);
#else
#if($type == "Real")
$propName = Double.valueOf(input);
#else
$propName = input;
#end
#end
                
            }
            
#set($inputFile="null")
#foreach($constraint in $field.getProperty().constraints)

##set( $inputFile = $constraintsDir + $constraint.getClass().getSimpleName() + ".vm" )
##parse( $inputFile )
#end


            
            break;
        } catch (NumberFormatException e) {
            System.out.println("Cannot parse the entered value!");
        } catch (ValidatorException e) {
            System.out.println(e.getMessage());
        }
    } while (true);
    entity.set${generator.toUCIdent($propName)}($propName);

#end

        return entity;
    }
}
